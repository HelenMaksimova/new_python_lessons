# Написать функцию thesaurus(), принимающую в качестве аргументов имена сотрудников и возвращающую словарь,
# в котором ключи — первые буквы имен, а значения — списки, содержащие имена, начинающиеся с соответствующей буквы.
# Например:
# >>> thesaurus("Иван", "Мария", "Петр", "Илья")
# {
#     "И": ["Иван", "Илья"],
#     "М": ["Мария"], "П": ["Петр"]
# }
# Подумайте: полезен ли будет вам оператор распаковки? Как поступить, если потребуется сортировка по ключам?
# Можно ли использовать словарь в этом случае?


def thesaurus(*args):
    result = dict()
    key_set = {name[0].upper() for name in args}
    for item in key_set:
        new_list = []
        for name in args:
            if item == name[0].upper():
                new_list.append(name)
        result[item] = new_list
    return result


print(thesaurus("Иван", "Мария", "Петр", "Илья"))

# Словари не поддерживают сортировку элементов, поэтому для вывода отсортированных данных
# придётся написать ещё немного кода. Хотя стоит заметить, что с версии 3.8 Python гарантирует
# соблюдение порядка записи элементов в словари, то есть если отсортировать ключи заранее перед записью в словарь,
# они будут выводиться в этом отсортированном порядке. Однако, традиционно на эту особенность не принято полагаться.
# Можно сделать нетрадиционно:


def thesaurus_sorted(*args):
    result = dict()
    key_set = sorted({name[0].upper() for name in args})
    for item in key_set:
        new_list = []
        for name in args:
            if item == name[0].upper():
                new_list.append(name)
        result[item] = new_list
    return result


print(thesaurus_sorted("Иван", "Мария", "Петр", "Илья"))


# или уйти от словаря и выводить уже нужные данные:

name_dict = thesaurus("Иван", "Мария", "Петр", "Илья")
key_list = sorted(name_dict)  # сортировка словаря возвращает отсортированный список его ключей, а не весь словарь.
for key in key_list:
    print(f'{key}:', name_dict[key], end=', ')

# *(вместо задачи 3) Написать функцию thesaurus_adv(),
# принимающую в качестве аргументов строки в формате «Имя Фамилия» и возвращающую словарь,
# в котором ключи — первые буквы фамилий, а значения — словари, реализованные по схеме предыдущего задания и
# содержащие записи, в которых фамилия начинается с соответствующей буквы. Например:
# >>> thesaurus_adv("Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева")
# {
#     "А": {
#         "П": ["Петр Алексеев"]
#     },
#     "С": {
#         "И": ["Иван Сергеев", "Инна Серова"],
#         "А": ["Анна Савельева"]
#     }
# }
# Как поступить, если потребуется сортировка по ключам?


def thesaurus_adv(*args):
    result = dict()
    data = [item.split() for item in args]
    key_set = sorted({lastname[1][0].upper() for lastname in data})
    for element in key_set:
        new_list = []
        for item in data:
            if item[1][0].upper() == element:
                new_list.append(' '.join(item))
        result[element] = thesaurus_sorted(*new_list)
    return result


print()
print(thesaurus_adv("Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева"))
