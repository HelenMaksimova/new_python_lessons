# Реализовать простую систему хранения данных о суммах продаж булочной. Должно быть два
# скрипта с интерфейсом командной строки: для записи данных и для вывода на экран
# записанных данных. При записи передавать из командной строки значение суммы продаж.
# Для чтения данных реализовать в командной строке следующую логику:
#     - просто запуск скрипта — выводить все записи;
#     - запуск скрипта с одним параметром-числом — выводить все записи с номера, равного
#     этому числу, до конца;
#     - запуск скрипта с двумя числами — выводить записи, начиная с номера, равного
# первому числу, по номер, равный второму числу, включительно.
# Подумать, как избежать чтения всего файла при реализации второго и третьего случаев.
# Данные хранить в файле bakery.csv в кодировке utf-8. Нумерация записей начинается с 1.
#
# *(вместо 6) Добавить возможность редактирования данных при помощи отдельного скрипта:
# передаём ему номер записи и новое значение. При этом файл не должен читаться целиком —
# обязательное требование. Предусмотреть ситуацию, когда пользователь вводит номер
# записи, которой не существует.

# Скрипт обновления данных.

from sys import argv

_, line_number, new_value = argv

with open('bakery.csv', encoding='utf-8') as bakery_file:
    data_list = [line for line in bakery_file]

try:
    data_list[int(line_number) - 1] = f'{new_value}\n' if int(line_number) < len(data_list) else f'{new_value}'
except IndexError:
    print('Записи с таким номером не существует!')
else:
    with open('bakery.csv', 'w', encoding='utf-8') as bakery_file:
        bakery_file.writelines(data_list)

    print('Обновление произведено успешно!')
