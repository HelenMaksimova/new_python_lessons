# Реализовать простую систему хранения данных о суммах продаж булочной. Должно быть два
# скрипта с интерфейсом командной строки: для записи данных и для вывода на экран
# записанных данных. При записи передавать из командной строки значение суммы продаж.
# Для чтения данных реализовать в командной строке следующую логику:
#     - просто запуск скрипта — выводить все записи;
#     - запуск скрипта с одним параметром-числом — выводить все записи с номера, равного
#     этому числу, до конца;
#     - запуск скрипта с двумя числами — выводить записи, начиная с номера, равного
# первому числу, по номер, равный второму числу, включительно.
# Подумать, как избежать чтения всего файла при реализации второго и третьего случаев.
# Данные хранить в файле bakery.csv в кодировке utf-8. Нумерация записей начинается с 1.
#
# *(вместо 6) Добавить возможность редактирования данных при помощи отдельного скрипта:
# передаём ему номер записи и новое значение. При этом файл не должен читаться целиком —
# обязательное требование. Предусмотреть ситуацию, когда пользователь вводит номер
# записи, которой не существует.

# Скрипт чтения данных:

from sys import argv
from itertools import islice

params_dict = {'num_start': 0, 'num_stop': None}

if len(argv) > 1:
    params_dict.update(zip(('num_start', 'num_stop'), [int(elem) - 1 for elem in argv[1:]]))

with open('bakery.csv', encoding='utf-8') as bakery_file:
    lines = islice(bakery_file, params_dict['num_start'], params_dict['num_stop'])
    for item in lines:
        print(item.strip().lstrip('0'))
    last_line = bakery_file.readline().strip()
    if last_line:
        print(last_line.lstrip('0'))
